name: Python CI/CD

on:
  push:
    branches:
      - main  # Replace with your main branch name
  pull_request:
    branches:
      - main  # Replace with your main branch name

jobs:
  build:
    runs-on: ubuntu-latest  # Use Ubuntu as the platform for local simulation 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Ensure using v3 for Node.js 20
        with:
          node-version: '20'  # Explicitly set Node.js version if needed

      - name: Set up Python
        uses: actions/setup-python@v4  # Ensure using v4 for Node.js 20
        with:
          python-version: '3.9'  # Use Python 3.9, adjust as needed

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pytest src/tests
        env:
          CI: true

      - name: Lint with flake8
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install flake8
          flake8 src

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "market-mood"  # Replace with your Heroku app name
          heroku_email: "mreed5812@gmail.com"   # Replace with your Heroku account email

      # - name: Set up Prometheus and Grafana
      #   run: |
      #     docker-compose up -d prometheus grafana flask_app
